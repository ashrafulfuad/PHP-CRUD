  function addproductinsert(Request $request)
    {
      $request->validate([
        'product_name' => 'required | ',
        'product_description' => 'required',
        'product_price' => 'required | integer',
        'product_quantity' => 'required | integer',
        'alert_quantity' => 'required | integer',
      ]);
      
      ///////////////////////////  start  /////////////////////////////
      $color_collection = collect([]);
      foreach ($request->color_id as $key => $value_of_color) {
        $color_collection->put('color_id'.$key, $value_of_color);
      }
       ///////////////////////////  end  /////////////////////////////
      $product_id = Product::insertGetId([
        'product_name' => $request->product_name,
        'category_id' => $request->category_id,
        'product_description' => $request->product_description,
        'product_price' => $request->product_price,
        'product_quantity' => $request->product_quantity,
        'alert_quantity' => $request->alert_quantity,
        'available_colors' => $color_collection,       ///////////   <-here this line   ///////////
        'created_at' => Carbon::now(),
      ]);
          if($request->hasFile('product_photo')){
        $product_photo = $request->file('product_photo');
        $filename = time() . '.' . $product_photo->getClientOriginalExtension();
        Image::make($product_photo)->resize(394, 451)->save( base_path('public/uploads/product_photos/' . $filename ),60 );
        Product::find($product_id)->update([
          'product_photo' => $filename,
        ]);
      }
       return back()->with('status', 'Product Inserted Successfully!');
    }
